# Даны значения величины заработной платы заемщиков банка (zp) и значения их поведенческого кредитного скоринга (ks):
# zp = [35, 45, 190, 200, 40, 70, 54, 150, 120, 110],
# ks = [401, 574, 874, 919, 459, 739, 653, 902, 746, 832].
# Найдите ковариацию этих двух величин с помощью элементарных действий, а затем с помощью функции cov из numpy.
# Полученные значения должны быть равны.
# Найдите коэффициент корреляции Пирсона с помощью ковариации и среднеквадратичных отклонений двух признаков, 
# а затем с использованием функций из библиотек numpy и pandas.

import numpy as np

zp = np.array([35, 45, 190, 200, 40, 70, 54, 150, 120, 110])
ks = np.array( [401, 574, 874, 919, 459, 739, 653, 902, 746, 832])

m_x = zp.mean()
m_y = ks.mean()
m_xy = (zp * ks).mean()
cov_ks = m_xy - m_x * m_y

np.cov(zp, ks, ddof = 0)
cov_ks2 = ((zp - zp.mean()) * (ks - ks.mean())).mean()

print (f'ковариация рассчитанная с помощью элементарных действий = {cov_ks: .3f}, ковариация рассчитанная с помощью функции cov из numpy = {cov_ks2: .3f}')

std_X = zp.std()
std_Y = ks.std()
corr_ks = cov_ks / (std_X * std_Y)
corr_ks_2_1, corr_ks_2_2 = np.corrcoef(zp, ks)
corr_ks_1, corr_ks_2 = corr_ks_2_1
print (f'коэффициент корреляции Пирсона, рассчитанный с помощью ковариации и среднеквадратичных отклонений = {corr_ks: .3f}, коэффициент корреляции Пирсона, рассчитанный с использованием библиотеки numpy = {corr_ks_2: .3f}')